// <auto-generated />
using System;
using System.Collections.Generic;
using CO.CDP.Organisation.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CO.CDP.Organisation.Persistence.Migrations
{
    [DbContext(typeof(OrganisationContext))]
    partial class OrganisationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CO.CDP.Organisation.Persistence.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("Roles")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("CO.CDP.Organisation.Persistence.Organisation", b =>
                {
                    b.OwnsOne("CO.CDP.Organisation.Persistence.Organisation+OrganisationAddress", "Address", b1 =>
                        {
                            b1.Property<int>("OrganisationId")
                                .HasColumnType("integer");

                            b1.HasKey("OrganisationId");

                            b1.ToTable("Organisations");

                            b1.WithOwner()
                                .HasForeignKey("OrganisationId");
                        });

                    b.OwnsOne("CO.CDP.Organisation.Persistence.Organisation+OrganisationContactPoint", "ContactPoint", b1 =>
                        {
                            b1.Property<int>("OrganisationId")
                                .HasColumnType("integer");

                            b1.HasKey("OrganisationId");

                            b1.ToTable("Organisations");

                            b1.WithOwner()
                                .HasForeignKey("OrganisationId");
                        });

                    b.OwnsMany("CO.CDP.Organisation.Persistence.Organisation+OrganisationIdentifier", "AdditionalIdentifiers", b1 =>
                        {
                            b1.Property<int>("OrganisationId")
                                .HasColumnType("integer");

                            b1.Property<string>("Id")
                                .HasColumnType("text")
                                .HasColumnName("IdentifierId");

                            b1.Property<string>("LegalName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("LegalName");

                            b1.Property<string>("Scheme")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Scheme");

                            b1.Property<string>("Uri")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Uri");

                            b1.HasKey("OrganisationId", "Id");

                            b1.ToTable("AdditionalIdentifiers", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrganisationId");
                        });

                    b.OwnsOne("CO.CDP.Organisation.Persistence.Organisation+OrganisationIdentifier", "Identifier", b1 =>
                        {
                            b1.Property<int>("OrganisationId")
                                .HasColumnType("integer");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("IdentifierId");

                            b1.Property<string>("LegalName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("LegalName");

                            b1.Property<string>("Scheme")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Scheme");

                            b1.Property<string>("Uri")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Uri");

                            b1.HasKey("OrganisationId");

                            b1.ToTable("Organisations");

                            b1.WithOwner()
                                .HasForeignKey("OrganisationId");
                        });

                    b.Navigation("AdditionalIdentifiers");

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactPoint")
                        .IsRequired();

                    b.Navigation("Identifier")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
