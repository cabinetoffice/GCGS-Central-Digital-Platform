// <auto-generated />
using System;
using CO.CDP.EntityVerification.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CO.CDP.EntityVerification.Migrations
{
    [DbContext(typeof(EntityVerificationContext))]
    partial class EntityVerificationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("entity_verification")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CO.CDP.EntityVerification.Persistence.Identifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("IdentifierId")
                        .HasColumnType("text")
                        .HasColumnName("identifier_id");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("legal_name");

                    b.Property<int>("PponId")
                        .HasColumnType("integer")
                        .HasColumnName("ppon_id");

                    b.Property<string>("Scheme")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("scheme");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Uri")
                        .HasColumnType("text")
                        .HasColumnName("uri");

                    b.HasKey("Id")
                        .HasName("pk_identifiers");

                    b.HasIndex("IdentifierId")
                        .HasDatabaseName("ix_identifiers_identifier_id");

                    b.HasIndex("PponId")
                        .HasDatabaseName("ix_identifiers_ppon_id");

                    b.HasIndex("Scheme")
                        .HasDatabaseName("ix_identifiers_scheme");

                    b.ToTable("identifiers", "entity_verification");
                });

            modelBuilder.Entity("CO.CDP.EntityVerification.Persistence.Ppon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("IdentifierId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identifier_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organisation_id");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id")
                        .HasName("pk_ppons");

                    b.HasIndex("IdentifierId")
                        .IsUnique()
                        .HasDatabaseName("ix_ppons_identifier_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_ppons_name");

                    b.HasIndex("OrganisationId")
                        .HasDatabaseName("ix_ppons_organisation_id");

                    b.ToTable("ppons", "entity_verification");
                });

            modelBuilder.Entity("CO.CDP.EntityVerification.Persistence.Identifier", b =>
                {
                    b.HasOne("CO.CDP.EntityVerification.Persistence.Ppon", null)
                        .WithMany("Identifiers")
                        .HasForeignKey("PponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_identifiers_ppons_ppon_id");
                });

            modelBuilder.Entity("CO.CDP.EntityVerification.Persistence.Ppon", b =>
                {
                    b.Navigation("Identifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
