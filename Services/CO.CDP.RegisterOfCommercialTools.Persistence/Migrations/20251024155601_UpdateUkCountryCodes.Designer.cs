// <auto-generated />
using System;
using CO.CDP.RegisterOfCommercialTools.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CO.CDP.RegisterOfCommercialTools.Persistence.Migrations
{
    [DbContext(typeof(RegisterOfCommercialToolsContext))]
    [Migration("20251024155601_UpdateUkCountryCodes")]
    partial class UpdateUkCountryCodes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.CpvCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("DescriptionCy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description_cy");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description_en");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("parent_code");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.HasKey("Code")
                        .HasName("pk_commercial_tools_cpv_codes");

                    b.HasIndex("Code", "IsActive")
                        .HasDatabaseName("ix_commercial_tools_cpv_codes_code_is_active");

                    b.HasIndex("ParentCode", "IsActive")
                        .HasDatabaseName("ix_commercial_tools_cpv_codes_parent_code_is_active");

                    b.ToTable("commercial_tools_cpv_codes", (string)null);
                });

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.NutsCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("DescriptionCy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description_cy");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description_en");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool>("IsSelectable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_selectable");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("parent_code");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.HasKey("Code")
                        .HasName("pk_commercial_tools_nuts_codes");

                    b.HasIndex("Code", "IsActive")
                        .HasDatabaseName("ix_commercial_tools_nuts_codes_code_is_active");

                    b.HasIndex("IsActive", "IsSelectable")
                        .HasDatabaseName("ix_commercial_tools_nuts_codes_is_active_is_selectable");

                    b.HasIndex("ParentCode", "IsActive")
                        .HasDatabaseName("ix_commercial_tools_nuts_codes_parent_code_is_active");

                    b.ToTable("commercial_tools_nuts_codes", (string)null);
                });

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.CpvCode", b =>
                {
                    b.HasOne("CO.CDP.RegisterOfCommercialTools.Persistence.CpvCode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commercial_tools_cpv_codes_commercial_tools_cpv_codes_paren");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.NutsCode", b =>
                {
                    b.HasOne("CO.CDP.RegisterOfCommercialTools.Persistence.NutsCode", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commercial_tools_nuts_codes_commercial_tools_nuts_codes_par");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.CpvCode", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("CO.CDP.RegisterOfCommercialTools.Persistence.NutsCode", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
