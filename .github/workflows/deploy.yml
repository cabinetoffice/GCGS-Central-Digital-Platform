name: Deploy

on:
  push:
    branches: [DP-189-deployment-workflow]
  pull_request:
    branches: [DP-189-deployment-workflow]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CDP_ORGANISATION_APP_PORT: 8888
      CDP_TENANT_PORT: 8811
      CDP_ORGANISATION_PORT: 8822
      CDP_PERSON_PORT: 8833
      CDP_FORMS_PORT: 8844
      CDP_DATA_SHARING_PORT: 8855

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build and Test .NET Project
        run: |
          dotnet tool restore
          dotnet restore
          dotnet build
          dotnet test --logger trx --results-directory TestResults

      - name: Build Docker Images
        run: make build-docker

      - name: Start services
        run: make up

      - name: Stop services
        run: make down

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push Docker Images
        run: |
          IMAGE_VERSION=$(date +%Y%m%d%H%M%S)
          for image in cabinetoffice/cdp-organisation-information-migrations cabinetoffice/cdp-data-sharing cabinetoffice/cdp-forms cabinetoffice/cdp-organisation-app cabinetoffice/cdp-organisation cabinetoffice/cdp-person cabinetoffice/cdp-tenant cabinetoffice/cdp-authority; do
            CLEAN_IMAGE_NAME=$(echo $image | sed 's/^cabinetoffice\///')
            docker tag $image:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/$CLEAN_IMAGE_NAME:$IMAGE_VERSION
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/$CLEAN_IMAGE_NAME:$IMAGE_VERSION
          done

      - name: Create Git Tag
        run: |
          IMAGE_VERSION=$(date +%Y%m%d%H%M%S)
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag ${IMAGE_VERSION}
          git push origin ${IMAGE_VERSION}

      - name: Store Version in SSM Parameter Store
        run: |
          IMAGE_VERSION=$(date +%Y%m%d%H%M%S)
          aws ssm put-parameter --name "cdp-sirsi-service-version" --value "${IMAGE_VERSION}" --type String --overwrite
