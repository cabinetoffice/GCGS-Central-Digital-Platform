services:

  gateway:
    container_name: co-cdp-gateway
    image: nginx:1.27
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - organisation-app
      - authority
      - tenant
      - organisation
      - person
      - forms
      - data-sharing
      - entity-verification
    volumes:
      - './docker/gateway/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './docker/gateway/templates:/etc/nginx/templates:ro'
    environment:
      CDP_ORGANISATION_APP_HOST: 'http://organisation-app:8080'
      CDP_AUTHORITY_HOST: 'http://authority:8080'
      CDP_TENANT_HOST: 'http://tenant:8080'
      CDP_ORGANISATION_HOST: 'http://organisation:8080'
      CDP_PERSON_HOST: 'http://person:8080'
      CDP_FORMS_HOST: 'http://forms:8080'
      CDP_DATA_SHARING_HOST: 'http://data-sharing:8080'
      CDP_ENTITY_VERIFICATION_HOST: 'http://entity-verification:8080'

  db:
    container_name: co-cdp-db
    image: postgres:16.3
    expose:
      - '5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U$${POSTGRES_USER:-} -d $${POSTGRES_DB:-}" ]
      interval: 3s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: cdp
      POSTGRES_USER: cdp_user
      POSTGRES_PASSWORD: cdp123

  localstack:
    container_name: co-cdp-localstack
    image: localstack/localstack:3.5
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   target: localstack
    healthcheck:
      test: ["CMD-SHELL", "awslocal sqs list-queues --region eu-west-1 | grep -E 'ev-inbound|ev-outbound' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - SERVICES=sqs
      - START_WEB=0
      - DEBUG=0
    volumes:
      - './docker/localstack/:/etc/localstack/init/ready.d/init-aws.sh'

  organisation-information-migrations:
    container_name: co-cdp-organisation-information-migrations
    restart: no
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations-organisation-information
    image: 'cabinetoffice/cdp-organisation-information-migrations:${IMAGE_VERSION:-latest}'
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      MIGRATIONS_CONNECTION_STRING: "Server=db;Database=cdp;Username=cdp_user;Password=cdp123;"
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  entity-verification-migrations:
      container_name: co-cdp-entity-verification-migrations
      restart: no
      build:
        context: .
        dockerfile: Dockerfile
        target: migrations-entity-verification
      image: 'cabinetoffice/cdp-entity-verification-migrations:${IMAGE_VERSION:-latest}'
      depends_on:
        db:
          condition: service_healthy
      environment:
        ASPNETCORE_ENVIRONMENT: Production
        MIGRATIONS_CONNECTION_STRING: "Server=db;Database=cdp;Username=cdp_user;Password=cdp123;"

  organisation-app:
    container_name: co-cdp-organisation-app
    build:
      context: .
      dockerfile: Dockerfile
      target: final-organisation-app
    image: 'cabinetoffice/cdp-organisation-app:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      TenantService: '${TenantService:-http://gateway:${CDP_TENANT_PORT:-8080}}'
      OrganisationService: '${OrganisationService:-http://gateway:${CDP_ORGANISATION_PORT:-8082}}'
      PersonService: '${PersonService:-http://gateway:${CDP_PERSON_PORT:-8084}}'
      FormsService: '${FormsService:-http://gateway:${CDP_FORMS_PORT:-8086}}'
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  authority:
    container_name: co-cdp-authority
    build:
      context: .
      dockerfile: Dockerfile
      target: final-authority
    image: 'cabinetoffice/cdp-authority:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__OrganisationInformationDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Issuer: 'http://gateway:${CDP_AUTHORITY_PORT:-8092}'

  tenant:
    container_name: co-cdp-tenant
    build:
      context: .
      dockerfile: Dockerfile
      target: final-tenant
    image: 'cabinetoffice/cdp-tenant:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__OrganisationInformationDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  organisation:
    container_name: co-cdp-organisation
    build:
      context: .
      dockerfile: Dockerfile
      target: final-organisation
    image: 'cabinetoffice/cdp-organisation:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__OrganisationInformationDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  person:
    container_name: co-cdp-person
    build:
      context: .
      dockerfile: Dockerfile
      target: final-person
    image: 'cabinetoffice/cdp-person:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__OrganisationInformationDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  forms:
    container_name: co-cdp-forms
    build:
      context: .
      dockerfile: Dockerfile
      target: final-forms
    image: 'cabinetoffice/cdp-forms:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__OrganisationInformationDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Organisation__Authority: '${Organisation__Authority:-http://gateway:${CDP_AUTHORITY_PORT:-8092}}'

  data-sharing:
    container_name: co-cdp-data-sharing
    build:
      context: .
      dockerfile: Dockerfile
      target: final-data-sharing
    image: 'cabinetoffice/cdp-data-sharing:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production

  entity-verification:
    container_name: co-cdp-entity-verification
    build:
      context: .
      dockerfile: Dockerfile
      target: final-entity-verification
    image: 'cabinetoffice/cdp-entity-verification:${IMAGE_VERSION:-latest}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent --write-out '{\"status\":%{http_code}}' --output /dev/null http://127.0.0.1:8080/health"]
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      db: 
        condition: "service_healthy"
      localstack:
        condition: "service_healthy"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__EvDatabase: 'Server=db;Database=cdp;Username=cdp_user;Password=cdp123;'
      Sqs__ServiceURL: "http://localstack:4566"
      Sqs__AuthenticationRegion: "eu-west-1"
      InboundQueue__Name: "ev-inbound"
      InboundQueue__MaxNumberOfMessages: 10
      InboundQueue__WaitTimeSeconds: 20
      OutboundQueue__Name: "ev-outbound"