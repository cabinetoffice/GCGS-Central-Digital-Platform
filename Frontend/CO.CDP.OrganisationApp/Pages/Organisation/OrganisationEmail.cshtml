@page "/organisation/{id}/email"
@model CO.CDP.OrganisationApp.Pages.Organisation.OrganisationEmailModel

@{
    var emailAddressHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.EmailAddress)).HasInnerHtml; 
}

<a href="/organisation/@Model.Id" class="govuk-back-link">
    Back
</a>

<main class="govuk-main-wrapper">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <partial name="_ErrorSummary" model="@ModelState" />

            <form method="post">

                @if (Request.Query.ContainsKey("frm-summary"))
                {
                    <input type="hidden" name="RedirectToSummary" value="true" />
                }

                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">

                        <h1 class="govuk-label-wrapper">
                            <label class="govuk-label govuk-label--l" for="@nameof(Model.EmailAddress)">
                                @Html.DisplayNameFor(m => m.EmailAddress)
                            </label>
                        </h1>

                        <div id="hint" class="govuk-hint">It should be a shared inbox managed by your team, not your own email address. This will be displayed on notices.</div>

                        <div class="govuk-form-group govuk-!-width-two-thirds @(emailAddressHasError ? "govuk-form-group--error" : "")">
                            @if (emailAddressHasError)
                            {
                                <p id="email-address-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span>
                                    @Html.ValidationMessageFor(m => m.EmailAddress)
                                </p>
                            }
                            <input class="govuk-input @(emailAddressHasError ? "govuk-input--error" : "")" id="@nameof(Model.EmailAddress)"
                                   value="@Model.EmailAddress" type="text" name="@nameof(Model.EmailAddress)"
                                   spellcheck="false" autocomplete="email" @(emailAddressHasError ? "aria-describedby=email-address-error" : "")>
                        </div>
                    </fieldset>
                </div>

                <button type="submit"
                        class="govuk-button"
                        data-prevent-double-click="true" data-prevent-double-click="true" data-module="govuk-button">
                    Continue
                </button>

            </form>
        </div>
    </div>
</main>