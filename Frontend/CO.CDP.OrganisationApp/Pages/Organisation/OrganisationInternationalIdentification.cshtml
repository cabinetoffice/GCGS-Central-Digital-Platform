@page
@model CO.CDP.OrganisationApp.Pages.Organisation.OrganisationInternationalIdentificationModel
@using CO.CDP.Localization

@{
    ViewData["Title"] = @StaticTextResource.OrganisationRegistration_InternationalIdentifier_Heading;
    var isSmallClass = "";
}

@section BeforeContent {
    <a href="/organisation/@Model.Id/organisation-identification-country?country=@Model.Country" class="govuk-back-link">
        @StaticTextResource.Global_Back
    </a>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ErrorSummary" model="@Model.ModelState" />
        <form method="post">
            @if (Model.HasIdentifierToShow == false)
            {
                <div class="govuk-notification-banner" role="region" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
                    <div class="govuk-notification-banner__header">
                        <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                            @StaticTextResource.Global_Important
                        </h2>
                    </div>
                    <div class="govuk-notification-banner__content">
                        <p class="govuk-notification-banner__heading">
                            @StaticTextResource.OrganisationRegistration_InternationalIdentifier_None
                        </p>
                        <p>
                            <a class="govuk-link govuk-!-font-size-19" href="/organisation/@Model.Id">
                                @StaticTextResource.OrganisationRegistration_InternationalIdentifier_None_Back
                            </a>
                        </p>
                    </div>
                </div>
            }
            else
            {
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                            <h1 class="govuk-fieldset__heading">
                                @ViewData["Title"]
                            </h1>
                        </legend>

                        <div id="organisationidentification-hint" class="govuk-hint">
                            @StaticTextResource.OrganisationRegistration_InternationalIdentifier_Select_Indentifier
                        </div>

                        <div class="govuk-radios" data-module="govuk-radios">
                            @if (Model.InternationalIdentifiers != null)
                            {
                                int index = 0;

                                isSmallClass = Model.InternationalIdentifiers.Count > 10 ? "govuk-radios--small" : "";

                                foreach (var choice in Model.InternationalIdentifiers)
                                {
                                    @if (Model.ExistingInternationalIdentifiers.Contains(choice.Scheme) == false)
                                    {
                                        var id = index == 0 ? "SelectedOption" : $"SelectedOption-{index}";
                                        var hasError = ModelState[nameof(Model.RegistrationNumbers)]?.Errors?.Any() ?? false;
                                        var selectedOption = Model.OrganisationScheme == choice.Scheme ? "checked" : "";

                                        <div class="govuk-radios @isSmallClass" data-module="govuk-radios">
                                            <div class="govuk-radios__item">
                                                <input class="govuk-radios__input" id="@id" name="@nameof(Model.OrganisationScheme)" type="radio" value="@choice.Scheme" data-aria-controls="conditional-@id" @selectedOption />
                                                <label class="govuk-label govuk-radios__label" for="@id">@choice.RegisterName</label>
                                            </div>
                                        </div>

                                        <div class="govuk-radios__conditional @(Model.OrganisationScheme == choice.Scheme ? "" : "govuk-radios__conditional--hidden")" id="conditional-@id">
                                            <div class="govuk-form-group @(hasError ? "govuk-form-group--error" : "")">
                                                @Html.LabelFor(m => m.RegistrationNumbers, htmlAttributes: new { @class = "govuk-label" })
                                                @if (hasError)
                                                {
                                                    <span id="RegistrationNumber-error" class="govuk-error-message">
                                                        <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                                                        @Html.ValidationMessageFor(m => m.RegistrationNumbers)
                                                    </span>
                                                }
                                                <input asp-for="RegistrationNumbers[@choice.Scheme]"
                                                       class="govuk-input @(hasError ? "govuk-input--error" : "")"
                                                       name="RegistrationNumbers[@choice.Scheme]"
                                                       id="RegistrationNumbers-@id"
                                                       type="text"
                                                       spellcheck="false"
                                                       autocomplete="off"
                                                       aria-describedby="@(hasError ? "RegistrationNumber-error" : null)"
                                                       value="@(Model.OrganisationScheme == choice.Scheme ? Model.RegistrationNumbers.GetValueOrDefault(choice.Scheme) : "")" />
                                            </div>
                                        </div>

                                        index++;
                                    }
                                }
                            }
                            @if (Model.ExistingInternationalIdentifiers.Contains(Model.Country + "-Other") == false)
                            {
                                <div class="govuk-radios @isSmallClass" data-module="govuk-radios">
                                    <div class="govuk-radios__item">
                                        <input class="govuk-radios__input"
                                               id="SelectedOption-Other"
                                               name="@nameof(Model.OrganisationScheme)"
                                               type="radio"
                                               value="@Model.Country-Other"
                                               data-aria-controls="conditional-other"
                                        @(Model.OrganisationScheme == $"{Model.Country}-Other" ? "checked" : "") />
                                        <label class="govuk-label govuk-radios__label" for="SelectedOption-Other">Other</label>
                                    </div>
                                </div>
                                <div class="govuk-radios__conditional @(Model.OrganisationScheme == $"{Model.Country}-Other" ? "" : "govuk-radios__conditional--hidden")" id="conditional-other">
                                    <div class="govuk-form-group @(ModelState[nameof(Model.RegistrationNumbers)]?.Errors?.Any() ?? false ? "govuk-form-group--error" : "")">
                                        @Html.LabelFor(m => m.RegistrationNumbers, htmlAttributes: new { @class = "govuk-label" })

                                        @if (ModelState[nameof(Model.RegistrationNumbers)]?.Errors?.Any() ?? false)
                                        {
                                            <span id="RegistrationNumber-error" class="govuk-error-message">
                                                <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                                                @Html.ValidationMessageFor(m => m.RegistrationNumbers)
                                            </span>
                                        }

                                        <input class="govuk-input @(ModelState[$"RegistrationNumbers[{Model.Country}-Other]"]?.Errors?.Any() ?? false ? "govuk-input--error" : "")"
                                               name="RegistrationNumbers[@Model.Country-Other]"
                                               id="RegistrationNumbers-Other"
                                               type="text"
                                               spellcheck="false"
                                               autocomplete="off"
                                               aria-describedby="@(ModelState["RegistrationNumbers[{Model.Country}-Other]"]?.Errors?.Any() ?? false ? "RegistrationNumber-error" : null)"
                                               value="@(Model.OrganisationScheme == $"{Model.Country}-Other" ? Model.RegistrationNumbers.GetValueOrDefault($"{Model.Country}-Other") : "")" />
                                    </div>
                                </div>
                            }
                        </div>


                    </fieldset>
                </div>

                <govuk-button>
                    @StaticTextResource.Global_Continue
                </govuk-button>
            }
        </form>
    </div>
</div>
