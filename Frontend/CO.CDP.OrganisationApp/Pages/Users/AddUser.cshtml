@page "/organisation/{id}/users/add-user/{personId?}"
@model CO.CDP.OrganisationApp.Pages.Users.AddUserModel
@using CO.CDP.OrganisationApp.Constants

@{
    ViewData["Title"] = "Add a user";
    var firstNameHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.FirstName)).HasInnerHtml;
    var lastNameHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.LastName)).HasInnerHtml;
    var emailHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.Email)).HasInnerHtml;
    var roleHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.Role)).HasInnerHtml;

    string IsSelected(bool selectedCondition)
    {
        return selectedCondition ? "checked='checked'" : string.Empty;
    }
}

<a href="/organisation/{@Model.Id}/users/user-summary" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper" id="main-content">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <partial name="_ErrorSummary" model="@Model.ModelState" />
        </div>
        <div class="govuk-grid-column-full">
            <h1 class="govuk-heading-l">
                @ViewData["Title"]
            </h1>
            <form class="form" method="post">
                <div class="govuk-form-group @(firstNameHasError ? "govuk-form-group--error" : "")">
                    <label class="govuk-label" for="@nameof(Model.FirstName)">
                        First name
                    </label>

                    @if (firstNameHasError)
                    {
                    <p id="first-name-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span>
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </p>
                    }
                    <input class="govuk-input govuk-input--width-20 @(firstNameHasError ? "govuk-input--error" : "")" id="@nameof(Model.FirstName)"
                            value="@Model.FirstName" name="@nameof(Model.FirstName)" type="text"
                            spellcheck="false" @(firstNameHasError ? "aria-describedby=first-name-error" : "")>
                </div>

                <div class="govuk-form-group @(lastNameHasError ? "govuk-form-group--error" : "")">
                    <label class="govuk-label" for="@nameof(Model.LastName)">
                        Last name
                    </label>

                    @if (lastNameHasError)
                    {
                        <p id="last-name-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @Html.ValidationMessageFor(m => m.LastName)
                        </p>
                    }
                    <input class="govuk-input govuk-input--width-20 @(lastNameHasError ? "govuk-input--error" : "")" id="@nameof(Model.LastName)"
                            value="@Model.LastName" name="@nameof(Model.LastName)" type="text"
                            spellcheck="false" @(lastNameHasError ? "aria-describedby=last-name-error" : "")>
                </div>

                <div class="govuk-form-group @(emailHasError ? "govuk-form-group--error" : "")">
                    <label class="govuk-label" for="@nameof(Model.Email)">
                        Email address
                    </label>

                    @if (emailHasError)
                    {
                        <p id="email-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @Html.ValidationMessageFor(m => m.Email)
                        </p>
                    }
                    <input class="govuk-input govuk-input--width-20 @(emailHasError ? "govuk-input--error" : "")" id="@nameof(Model.Email)"
                            value="@Model.Email" name="@nameof(Model.Email)" type="text"
                            spellcheck="false" @(emailHasError ? "aria-describedby=email-error" : "")>
                </div>

                <div class="govuk-form-group @(roleHasError ? "govuk-form-group--error" : "")">
                    <fieldset class="govuk-fieldset" aria-describedby="role-hint @(roleHasError ? "role-error" : "")">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            Select user role
                        </legend>
                        @if (roleHasError)
                        {
                            <p id="role-error" class="govuk-error-message">
                                <span class="govuk-visually-hidden">Error:</span>
                                @Html.ValidationMessageFor(m => m.Role)
                            </p>
                        }
                        <div id="role-hint" class="govuk-hint">
                            Select the one that applies
                        </div>
                        <div class="govuk-radios" data-module="govuk-radios">
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="@nameof(Model.Role)" name="role" type="radio" value="@OrganisationPersonScopes.Admin" aria-describedby="role-admin-hint" @IsSelected(Model.Role == OrganisationPersonScopes.Admin)>
                                <label class="govuk-label govuk-radios__label" for="@nameof(Model.Role)">
                                    Admin
                                </label>
                                <div id="role-admin-hint" class="govuk-hint govuk-radios__hint">
                                    Can do anything, including add, remove and edit users
                                </div>
                            </div>

                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="@nameof(Model.Role)-1" name="role" type="radio" value="@OrganisationPersonScopes.Editor" aria-describedby="role-editor-hint" @IsSelected(Model.Role == OrganisationPersonScopes.Editor)>
                                <label class="govuk-label govuk-radios__label" for="@nameof(Model.Role)-1">
                                    Editor
                                </label>
                                <div id="role-editor-hint" class="govuk-hint govuk-radios__hint">
                                    Can view, add and edit organisation information, view supplier information and create API keys
                                </div>
                            </div>

                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="@nameof(Model.Role)-2" name="role" type="radio" value="@OrganisationPersonScopes.Viewer" aria-describedby="role-viewer-hint" @IsSelected(Model.Role == OrganisationPersonScopes.Viewer)>
                                <label class="govuk-label govuk-radios__label" for="@nameof(Model.Role)-2">
                                    Viewer
                                </label>
                                <div id="role-viewer-hint" class="govuk-hint govuk-radios__hint">
                                    Can view organisation and supplier information
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>

                <govuk-button class="govuk-!-margin-top-6">Continue</govuk-button>
            </form>
        </div>
    </div>
</main>