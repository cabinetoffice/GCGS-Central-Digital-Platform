@page "/organisation/{organisationId:guid}/forms/{formId:guid}/sections/{sectionId:guid}/questions/{currentQuestionId}"
@model CO.CDP.OrganisationApp.Pages.Forms.FormsQuestionPageModel
@using CO.CDP.Localization
@using Microsoft.AspNetCore.Html

@{
    var isCheckYourAnswersPage = Model.CurrentFormQuestionType == Models.FormQuestionType.CheckYourAnswers;
    var backUrl = Model.IsInformalConsortium
        ? $"/consortium/{Model.OrganisationId}/overview"
        : $"/organisation/{Model.OrganisationId}/supplier-information";
    var fromCheckAnswerPage = Model.RedirectFromCheckYourAnswerPage == true;

    if (Request.Query["UkOrNonUk"] == "non-uk")
    {
        backUrl = fromCheckAnswerPage ? "?frm-chk-answer" : "?";
    }
    else
    {
        if (fromCheckAnswerPage)
        {
            var checkYourAnswerQuestionId = Model.CheckYourAnswerQuestionId;
            backUrl = $"/organisation/{Model.OrganisationId}/forms/{Model.FormId}/sections/{Model.SectionId}/questions/{checkYourAnswerQuestionId}";
        }
        else if (Model.PreviousQuestion != null)
        {
            backUrl = $"/organisation/{Model.OrganisationId}/forms/{Model.FormId}/sections/{Model.SectionId}/questions/{Model.PreviousQuestion.Id}{(Model.PreviousQuestionHasNonUkAddressAnswer() ? "?UkOrNonUk=non-uk" : "")}";
        }
    }
}

@section BeforeContent {
    <a href="@backUrl" class="govuk-back-link">@StaticTextResource.Global_Back</a>
}

<div class="govuk-grid-row">
    <div class="@(isCheckYourAnswersPage ? "govuk-grid-column-full" : "govuk-grid-column-two-thirds")">
        <partial name="_ErrorSummary" model="@ModelState"/>

        @if (!string.IsNullOrWhiteSpace(Model.PartialViewModel?.Options?.Layout?.PreHeadingContent))
{
    @Html.Raw(Model.PartialViewModel.Options.Layout.PreHeadingContent)
}

<form method="post" enctype="@Model.EncType" novalidate>
    @if (Model.IsMultiQuestionPage && Model.MultiQuestionViewModel != null)
    {
        @await RenderMultiQuestionPage()
    }
    else
    {
        @await RenderSingleQuestionPage()
    }
</form>

@if (!string.IsNullOrWhiteSpace(Model.PartialViewModel?.Options?.Layout?.PostSubmitContent))
{
    @Html.Raw(Model.PartialViewModel.Options.Layout.PostSubmitContent)
}
    </div>
</div>

@functions {
    private async Task<IHtmlContent> RenderMultiQuestionPage()
    {
        if (Model.MultiQuestionViewModel == null)
            return HtmlString.Empty;

        var pageTitle = !string.IsNullOrEmpty(Model.MultiQuestionViewModel.PageTitleResourceKey)
            ? FormsEngineResource.ResourceManager.GetString(Model.MultiQuestionViewModel.PageTitleResourceKey) ?? Model.MultiQuestionViewModel.Questions.FirstOrDefault()?.Title ?? ""
            : Model.MultiQuestionViewModel.Questions.FirstOrDefault()?.Title ?? "";
        ViewData["Title"] = pageTitle;

        return await Html.PartialAsync("_FormElementMultiQuestion", Model.MultiQuestionViewModel);
    }

    private async Task<IHtmlContent> RenderSingleQuestionPage()
    {
        var isCheckYourAnswersPage = Model.CurrentFormQuestionType == Models.FormQuestionType.CheckYourAnswers;

        if (isCheckYourAnswersPage)
        {
            return await RenderCheckYourAnswersPage();
        }

        return await RenderRegularSingleQuestionPage();
    }

    private async Task<IHtmlContent> RenderCheckYourAnswersPage()
    {
        ViewData["Title"] = StaticTextResource.Forms_CheckYourAnswers_Title;
        var groupedAnswersModel = await Model.GetGroupedAnswersModel();
        return await Html.PartialAsync("_FormElementCheckYourAnswers", groupedAnswersModel);
    }

    private async Task<IHtmlContent> RenderRegularSingleQuestionPage()
    {
        if (Model.PartialViewName == null || Model.PartialViewModel == null)
            return HtmlString.Empty;

        ViewData["Title"] = Model.PartialViewModel.Heading;

        var questionContent = await Html.PartialAsync(Model.PartialViewName, Model.PartialViewModel);
        var buttonText = !string.IsNullOrEmpty(Model.PartialViewModel?.Options?.Layout?.PrimaryButtonText) ? StaticTextResource.ResourceManager.GetString(Model.PartialViewModel.Options.Layout.PrimaryButtonText) ?? StaticTextResource.Global_Continue : StaticTextResource.Global_Continue;
        var continueButton = Html.Raw("<button type=\"submit\" class=\"govuk-button\">" + buttonText + "</button>");

        var builder = new HtmlContentBuilder();
        builder.AppendHtml(questionContent);
        builder.AppendHtml(Environment.NewLine);
        builder.AppendHtml(continueButton);

        return builder;
    }
}
