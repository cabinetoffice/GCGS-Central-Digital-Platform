@model FormElementFileUploadModel

@{
    var hasError = ((TagBuilder)Html.ValidationMessageFor(m => m.UploadedFile)).HasInnerHtml;
}

<input type="hidden" name="UploadedFileName" value="@Model.UploadedFileName" />

<div class="govuk-form-group @(hasError ? "govuk-form-group--error" : "")">
    @if (!string.IsNullOrWhiteSpace(Model.Heading))
    {
        <h1 class="govuk-heading-l">@Model.Heading</h1>
    }

    @if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        @Html.Raw(Model.Description)
    }

    @if (!string.IsNullOrWhiteSpace(@Model.UploadedFileName))
    {
        <p class="govuk-body">Uploaded file: @Model.UploadedFileName</p>
    }

    @if (hasError)
    {
        <p class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(m => m.UploadedFile)
        </p>
    }

    <input class="govuk-file-upload" name="UploadedFile" type="file"
           accept="image/png, image/gif, image/jpeg, application/pdf, text/plain, text/csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document">
</div>