@model FormElementFileUploadModel
@using CO.CDP.Localization

@{
    var uploadFileHasError = Model.HasValidationError(nameof(Model.UploadedFile), ViewData.ModelState);
    var selectOptionHasError = Model.HasValidationError(nameof(Model.HasValue), ViewData.ModelState);

    void RenderDescription()
    {
        if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            @Html.Raw(Model.Description)
        }
    }

    void RenderField()
    {
        <label class="govuk-label" for="@Model.GetFieldName(nameof(Model.UploadedFile))">
            @StaticTextResource.Forms_FormElementFileUpload_UploadFileLabel
        </label>
        <div id="@Model.GetFieldName("documents-hint")" class="govuk-hint">
            @StaticTextResource.Forms_FormElementFileUpload_DocumentsHint
        </div>

        var ariaDescribedby = "documents-hint";
        if (uploadFileHasError)
        {
            ariaDescribedby += " documents-error";
            <p class="govuk-error-message" id="@Model.GetFieldName("documents-error")">
                <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                @Model.GetValidationMessage(nameof(Model.UploadedFile), ViewData.ModelState)
            </p>
        }

        <input id="@Model.GetFieldName(nameof(Model.UploadedFile))" class="govuk-file-upload" name="@Model.GetFieldName(nameof(Model.UploadedFile))" type="file" aria-describedby="@ariaDescribedby"
               accept="image/png, image/gif, image/jpeg, application/pdf, text/plain, text/csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document">

        @if (!string.IsNullOrWhiteSpace(@Model.UploadedFileName))
        {
            <p class="govuk-body">@string.Format(StaticTextResource.Forms_FormElementFileUpload_UploadedFileText, @Model.UploadedFileName)</p>
        }
    }
}

<input type="hidden" name="@Model.GetFieldName(nameof(Model.UploadedFileName))" value="@Model.UploadedFileName" />

<div class="govuk-form-group @((Model.IsRequired && uploadFileHasError) || selectOptionHasError ? "govuk-form-group--error" : "")">
    @if (Model.IsRequired)
    {
        @RenderFieldsetHeading(Model.Heading, Model.Caption, Model.IsFirstQuestion, Model.Options?.Layout?.HeadingSize)
        RenderDescription();
        RenderField();
    }
    else
    {
        <fieldset class="govuk-fieldset">
            @RenderLegend(Model.Heading, Model.Caption, Model.IsFirstQuestion, Model.Options?.Layout?.HeadingSize)
            @{
                RenderDescription();
            }
            @if (selectOptionHasError)
            {
                <p class="govuk-error-message">
                    <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                    @Model.GetValidationMessage(nameof(Model.HasValue), ViewData.ModelState)
                </p>
            }

            <div class="govuk-radios" data-module="govuk-radios">

                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="@Model.GetFieldName(nameof(Model.HasValue))" name="@Model.GetFieldName(nameof(Model.HasValue))" type="radio"
                           value="true" data-aria-controls="conditional-YES" @(Model.HasValue == true ? "checked" : "")>
                    <label class="govuk-label govuk-radios__label" for="@Model.GetFieldName(nameof(Model.HasValue))">@StaticTextResource.Global_Yes</label>
                </div>

                <div class="govuk-radios__conditional" id="@Model.GetFieldName("conditional-YES")">
                    <div class="govuk-form-group @(uploadFileHasError ? "govuk-form-group--error" : "")">
                        @{
                            RenderField();
                        }
                    </div>
                </div>

                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="@(Model.GetFieldName(nameof(Model.HasValue)) + "-1")" name="@Model.GetFieldName(nameof(Model.HasValue))" type="radio"
                           value="false" @(Model.HasValue == false ? "checked" : "")>
                    <label class="govuk-label govuk-radios__label" for="@(Model.GetFieldName(nameof(Model.HasValue)) + "-1")">@StaticTextResource.Global_No</label>
                </div>
            </div>
        </fieldset>
    }
</div>
