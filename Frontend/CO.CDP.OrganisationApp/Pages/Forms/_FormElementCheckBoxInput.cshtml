@model FormElementCheckBoxInputModel

@{
    var hasError = ((TagBuilder)Html.ValidationMessageFor(m => m.CheckBoxInput)).HasInnerHtml;
}


<div class="govuk-form-group @(hasError ? "govuk-form-group--error" : "")">
    <fieldset class="govuk-fieldset" aria-required="true">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
            @if (!string.IsNullOrWhiteSpace(Model.Heading))
            {
                <h2 class="govuk-fieldset__heading">@Model.Heading</h2>
            }
        </legend>

        @if (!string.IsNullOrEmpty(Model.Description))
        {
            @Html.Raw(Model.Description)
        }

        @if (hasError)
        {
            <span class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span>
                @Html.ValidationMessageFor(m => m.CheckBoxInput)
            </span>
        }

        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
            <div class="govuk-checkboxes__item">
                <input class="govuk-checkboxes__input" id="declarationStatement" name="CheckBoxInput" type="checkbox" value="true" @(Model.CheckBoxInput == true ? "checked" : "")>
                <label class="govuk-label govuk-checkboxes__label" for="declarationStatement">
                    @Html.Raw(Model.Options?.Choices?.FirstOrDefault())
                </label>
            </div>
        </div>
    </fieldset>
</div>
