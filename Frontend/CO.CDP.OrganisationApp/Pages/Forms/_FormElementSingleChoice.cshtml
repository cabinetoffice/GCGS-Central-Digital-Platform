@model FormElementSingleChoiceModel
@using CO.CDP.OrganisationApp.Pages.Forms.ChoiceProviderStrategies
@inject IChoiceProviderService choiceProviderService

@{
    var hasError = ((TagBuilder)Html.ValidationMessageFor(m => m.SelectedOption)).HasInnerHtml;
    string ariaDescribedby = "";

    if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        ariaDescribedby += "SelectedOption-description";
    }

    if (hasError)
    {
        ariaDescribedby += " SelectedOption-error";
    }

    IChoiceProviderStrategy choiceProviderStrategy = choiceProviderService.GetStrategy(Model.Options.ChoiceProviderStrategy);
}

<div class="govuk-form-group">
    <fieldset class="govuk-fieldset" aria-describedby="@ariaDescribedby">
        @if (!string.IsNullOrWhiteSpace(Model.Heading))
        {
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                <h1 class="govuk-fieldset__heading">
                    @Model.Heading
                    @if (!string.IsNullOrWhiteSpace(Model.Caption))
                    {
                        <span class="govuk-caption-l govuk-!-margin-bottom-3">@Model.Caption</span>
                    }
                </h1>
            </legend>           
        }

        @if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            <div id="SelectedOption-description">
                @Html.Raw(Model.Description)
            </div>
        }

        @if (hasError)
        {
            <p class="govuk-error-message" id="SelectedOption-error">
                <span class="govuk-visually-hidden">Error:</span>
                @Html.ValidationMessageFor(m => m.SelectedOption)
            </p>
        }

        <div class="govuk-radios" data-module="govuk-radios">
            @{
                var index = 0;
                if (Model.Options?.Choices != null ) {
                    foreach(var choice in Model.Options.Choices)
                    {
                        var id = index == 0 ? "SelectedOption" : $"SelectedOption_{index}";

                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="@id" name="SelectedOption" type="radio" value="@choice.Key" @(Model.SelectedOption == choice.Key ? "checked" : "")>
                            <label class="govuk-label govuk-radios__label" for="@id">@choice.Value</label>
                        </div>

                        index++;
                    }
                }
            }
        </div>

        @* TODO: Can we get the AnswerFieldName from the choice provider strategy directly after posting, rather than passing it here *@
        <input type="hidden" name="AnswerFieldName" value="@choiceProviderStrategy.AnswerFieldName" />
    </fieldset>
</div>