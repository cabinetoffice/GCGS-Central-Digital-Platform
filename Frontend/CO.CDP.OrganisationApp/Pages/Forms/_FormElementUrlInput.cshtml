@model FormElementUrlInputModel
@using CO.CDP.Localization

@{
    var textInputHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.TextInput)).HasInnerHtml;
    var selectOptionHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.HasValue)).HasInnerHtml;
    string textInputAriaDescribedby = "";

    void RenderDescription()
    {
        if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            textInputAriaDescribedby += Model.GetFieldName("TextInput-description");

            <div id="@Model.GetFieldName("TextInput-description")">
                @Html.Raw(Model.Description)
            </div>
        }
    }

    void RenderField()
    {
        if (textInputHasError)
        {
            textInputAriaDescribedby += " " + Model.GetFieldName("TextInput-error");

            <p class="govuk-error-message" id="@Model.GetFieldName("TextInput-error")">
                <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                @Html.ValidationMessageFor(m => m.TextInput)
            </p>
        }

        <input class="govuk-input govuk-!-width-two-thirds @(Model.Options?.Layout?.CustomCssClasses)" id="@Model.GetFieldName(nameof(Model.TextInput))" name="@Model.GetFieldName(nameof(Model.TextInput))" type="text" value="@Model.TextInput"
        @(string.IsNullOrWhiteSpace(textInputAriaDescribedby) ? "" : Html.Raw($"aria-describedby=\"{textInputAriaDescribedby}\""))>
    }
}

<div class="govuk-form-group @((Model.IsRequired && textInputHasError) || selectOptionHasError ? "govuk-form-group--error" : "")">

    @if (Model.IsRequired)
    {
        if (!string.IsNullOrWhiteSpace(Model.Heading))
        {
            <h1 class="govuk-label-wrapper">
                <label class="govuk-label govuk-label--l" for="@Model.GetFieldName(nameof(Model.TextInput))">@Model.Heading</label>

                @if (!string.IsNullOrWhiteSpace(Model.Caption))
                {
                    <span class="govuk-caption-l govuk-!-margin-bottom-3">@Model.Caption</span>
                }
            </h1>
        }
        RenderDescription();
        RenderField();
    }
    else
    {
        <fieldset class="govuk-fieldset" @(selectOptionHasError ? Html.Raw("aria-describedby=\"input-error\"") : "") >
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                @if (!string.IsNullOrWhiteSpace(Model.Heading))
                {
                    <h1 class="govuk-fieldset__heading">
                        @Model.Heading
                    </h1>
                }
            </legend>

            @{
                RenderDescription();
            }

            @if (selectOptionHasError)
            {
                <p class="govuk-error-message">
                    <span id="@Model.GetFieldName("input-error")" class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                    @Html.ValidationMessageFor(m => m.HasValue)
                </p>
            }

            <div class="govuk-radios" data-module="govuk-radios">

                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="@Model.GetFieldName(nameof(Model.HasValue))" name="@Model.GetFieldName(nameof(Model.HasValue))" type="radio"
                           value="true" data-aria-controls="conditional-YES" @(Model.HasValue == true ? "checked" : "")>
                    <label class="govuk-label govuk-radios__label" for="@Model.GetFieldName(nameof(Model.HasValue))">@StaticTextResource.Global_Yes</label>
                </div>

                <div class="govuk-radios__conditional" id="conditional-YES">
                    <div class="govuk-form-group @(textInputHasError ? "govuk-form-group--error" : "")">
                        @{
                            <label class="govuk-label" for="@nameof(Model.TextInput)">@Model.Caption</label>
                            RenderField();
                        }
                    </div>
                </div>

                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" id="@(Model.GetFieldName(nameof(Model.HasValue)) + "-1")" name="@Model.GetFieldName(nameof(Model.HasValue))" type="radio"
                           value="false" @(Model.HasValue == false ? "checked" : "")>
                    <label class="govuk-label govuk-radios__label" for="@(Model.GetFieldName(nameof(Model.HasValue)) + "-1")">@StaticTextResource.Global_No</label>
                </div>
            </div>
        </fieldset>
    }
</div>