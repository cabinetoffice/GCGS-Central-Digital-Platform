@model FormElementTextInputModel

@{
    var hasError = ((TagBuilder)Html.ValidationMessageFor(m => m.TextInput)).HasInnerHtml;
    string ariaDescribedby = "";
}

<div class="govuk-form-group">
   
    @if (!string.IsNullOrWhiteSpace(Model.Heading))
    {
        <h1 class="govuk-label-wrapper">
            <label class="govuk-label govuk-label--l" for="TextInput">@Model.Heading</label>

            @if (!string.IsNullOrWhiteSpace(Model.Caption))
            {
                <span class="govuk-caption-l govuk-!-margin-bottom-3">@Model.Caption</span>
            }
        </h1>
    }

    @if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        ariaDescribedby += "TextInput-description";

        <div id="TextInput-description">
            @Html.Raw(Model.Description)
        </div>
    }

    @if (hasError)
    {
        ariaDescribedby += " TextInput-error";

        <p class="govuk-error-message" id="TextInput-error">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(m => m.TextInput)
        </p>
    }

    <input class="govuk-input govuk-!-width-two-thirds" id="TextInput" name="TextInput" type="text" value="@Model.TextInput" @(string.IsNullOrWhiteSpace(ariaDescribedby) ? "" : Html.Raw($"aria-describedby=\"{ariaDescribedby}\""))>
</div>