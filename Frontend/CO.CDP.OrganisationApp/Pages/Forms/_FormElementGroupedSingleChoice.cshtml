@model FormElementGroupedSingleChoiceModel
@using CO.CDP.Localization

@{
    var hasError = Model.HasValidationError(nameof(Model.SelectedOption), ViewData.ModelState);
    string ariaDescribedby = "";

    if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        ariaDescribedby += Model.GetFieldName("SelectedOption-description");
    }

    if (hasError)
    {
        ariaDescribedby += " " + Model.GetFieldName("SelectedOption-error");
    }
}

<div class="govuk-form-group @(hasError ? "govuk-form-group--error" : "")">
    <fieldset class="govuk-fieldset" aria-describedby="@ariaDescribedby">
        @if (!string.IsNullOrWhiteSpace(Model.Heading))
        {
            @RenderLegend(Model.Heading, Model.Caption, Model.IsFirstQuestion, Model.Options?.Layout?.Heading?.Size)
        }

        @if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            <div id="@Model.GetFieldName("SelectedOption-description")">
                @Html.Raw(Model.Description)
            </div>
        }

        @if (hasError)
        {
            <p class="govuk-error-message" id="@Model.GetFieldName("SelectedOption-error")">
                <span class="govuk-visually-hidden">@StaticTextResource.Global_Error:</span>
                @Model.GetValidationMessage(nameof(Model.SelectedOption), ViewData.ModelState)
            </p>
        }

        @if (Model.Options?.Groups != null)
        {
            var index = 0;

            foreach (var group in Model.Options.Groups)
            {
                <h2 class="govuk-heading-m">
                    <span class="govuk-caption-m">@group.Caption</span>
                    @group.Name
                </h2>

                @if (!string.IsNullOrWhiteSpace(@group.Hint))
                {
                    <div class="govuk-hint">
                        <p>@Html.Raw(@group.Hint)</p>
                    </div>
                }

                <div class="govuk-radios govuk-!-margin-bottom-5 @(Model.Options?.Layout?.Input?.CustomCssClasses)" data-module="govuk-radios">
                    @foreach (var choice in group.Choices)
                    {
                        var id = index == 0 ? Model.GetFieldName(nameof(Model.SelectedOption)) : $"{Model.GetFieldName(nameof(Model.SelectedOption))}_{index}";

                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="@id" name="@Model.GetFieldName(nameof(Model.SelectedOption))" type="radio" value="@choice.Value" @(Model.SelectedOption == choice.Value ? "checked" : "")>
                            <label class="govuk-label govuk-radios__label" for="@id">@choice.Title</label>
                        </div>

                        index++;
                    }
                </div>
            }
        }
    </fieldset>
</div>