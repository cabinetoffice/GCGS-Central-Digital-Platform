@page "/organisation/{id}/supplier-information/connected-person/company-register-name/{ConnectedEntityId?}"
@model CO.CDP.OrganisationApp.Pages.Supplier.ConnectedEntityCompanyRegisterNameModel
@{
    var registerNameHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.RegisterName)).HasInnerHtml;
    var otherHasError = ((TagBuilder)Html.ValidationMessageFor(m => m.RegisterNameInput)).HasInnerHtml;

    var backPage = Model.RedirectToCheckYourAnswer == true
                    ? (Model.ConnectedEntityType == Constants.ConnectedEntityType.Organisation
                        ? "check-answers-organisation" : "check-answer-individual-trust")
                    : Model.BackPageLink;

    var backLink = $"/organisation/{Model.Id}/supplier-information/connected-person/{backPage}/{Model.ConnectedEntityId}";

    if (Model.RedirectToCheckYourAnswer == true)
    {
        backLink += "?frm-chk-answer=true";
    }
}

<a href="@backLink" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <partial name="_ErrorSummary" model="@ModelState" />
            <span class="govuk-caption-l">@Model.Caption</span>
            <form class="form" method="post">
                <div class="govuk-form-group @(registerNameHasError ? "govuk-form-group--error" : "")">
                    <h1 class="govuk-label-wrapper">
                        <label class="govuk-label govuk-label--l" for="registerName">@Model.Heading</label>
                    </h1>
                    @if (registerNameHasError)
                    {
                        <p id="organisation-name-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @Html.ValidationMessageFor(m => m.RegisterName)
                        </p>
                    }

                    <div class="govuk-radios" data-module="govuk-radios">
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="registerNameCompaniesHouse" name="registerName" type="radio"
                                   value="CompaniesHouse" @(Model.RegisterName == "CompaniesHouse" ? "checked" : "")>
                            <label class="govuk-label govuk-radios__label" for="registerNameCompaniesHouse">
                                @ConnectedEntityCompanyRegisterNameModel.RegisterNameType["CompaniesHouse"]
                            </label>
                        </div>
                        <div class="govuk-radios__item">
                            <input class="govuk-radios__input" id="registerNameOther" name="registerName" type="radio"
                                   value="Other" data-aria-controls="conditional-Other" @(Model.RegisterName == "Other" ? "checked" : "")>
                            <label class="govuk-label govuk-radios__label" for="registerNameOther">
                                Other
                            </label>

                        </div>
                        <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-Other">
                            @if (otherHasError)
                            {
                                <p id="organisation-name-error" class="govuk-error-message">
                                    <span class="govuk-visually-hidden">Error:</span>
                                    @Html.ValidationMessageFor(m => m.RegisterNameInput)
                                </p>
                            }

                            <div class="govuk-form-group @(otherHasError ? "govuk-form-group--error" : "")">
                                <label class="govuk-label" for="registerNameInput">
                                    Register name
                                </label>
                                <input class="govuk-input govuk-!-width-one-half @(otherHasError ? "govuk-input--error" : "")"
                                       id="RegisterNameInput" name="RegisterNameInput"
                                       value="@(Model.RegisterName == "Other" ? Model.RegisterNameInput : "")">
                            </div>
                        </div>
                    </div>
                </div>
                <govuk-button>Continue</govuk-button>
            </form>
        </div>
    </div>
</main>