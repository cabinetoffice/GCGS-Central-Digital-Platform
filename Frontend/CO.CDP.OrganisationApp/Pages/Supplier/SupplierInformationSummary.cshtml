@page "/organisation/{id}/supplier-information"
@using CO.CDP.Localization
@using CO.CDP.OrganisationApp.Pages.Forms
@using CO.CDP.OrganisationApp.Constants
@inject IUserInfoService userInfoService
@model CO.CDP.OrganisationApp.Pages.Supplier.SupplierInformationSummaryModel

@{
    ViewData["Title"] = Model.Name;
    string GetStepStatusDescription(SupplierInformationStatus.StepStatus status)
    {
        return status switch
        {
            SupplierInformationStatus.StepStatus.NotStarted => StaticTextResource.SupplierInformationStatus_StepStatus_NotStarted,
            SupplierInformationStatus.StepStatus.InProcess => StaticTextResource.SupplierInformationStatus_StepStatus_InProcess,
            SupplierInformationStatus.StepStatus.Completed => StaticTextResource.SupplierInformationStatus_StepStatus_Completed,
            _ => StaticTextResource.SupplierInformationStatus_StepStatus_NotStarted
        };
    }

    string GetStepStatusTag(SupplierInformationStatus.StepStatus status)
    {
        return status switch
        {
            SupplierInformationStatus.StepStatus.NotStarted => "grey",
            SupplierInformationStatus.StepStatus.InProcess => "blue",
            SupplierInformationStatus.StepStatus.Completed => "green",
            _ => "grey"
        };
    }

    bool isViewer = await userInfoService.IsViewer();

    var basicInformationLink = $"/organisation/{Model.Id}/supplier-information/{((Model.HasSupplierType || isViewer) ? "basic-information" : "individual-or-org")}";
    var connectedEntityLink = $"/organisation/{Model.Id}/supplier-information/connected-person/{((Model.ConnectedEntities.Count > 0 || isViewer) ? "connected-person-summary" : "declaration")}";

    string NoOfConnectedPersonText()
    {
        int count = Model.ConnectedEntities.Count;

        if (count == 0)
        {
            return Model.ConnectedPersonStepStatus == SupplierInformationStatus.StepStatus.Completed ? StaticTextResource.Supplier_SupplierInformationSummary_ConnectedPersonCount_None : string.Empty;
        }

        return string.Format(count > 1 ? StaticTextResource.Supplier_SupplierInformationSummary_ConnectedPersonCount_Plural : StaticTextResource.Supplier_SupplierInformationSummary_ConnectedPersonCount_Singular, count);
    }
}

@section BeforeContent {
    <a href="/organisation/@Model.Id" class="govuk-back-link">
        @StaticTextResource.Global_Back
    </a>
}

<h1 class="govuk-heading-l">
    @ViewData["Title"]
</h1>
<h2 class="govuk-heading-m">@StaticTextResource.Supplier_SupplierInformationSummary_Heading</h2>
<p class="govuk-body">@StaticTextResource.Supplier_SupplierInformationSummary_Hint</p>
<ul class="govuk-task-list">
    <li class="govuk-task-list__item govuk-task-list__item--with-link">
        <div class="govuk-task-list__name-and-hint">
            <a class="govuk-link govuk-link--no-visited-state" href="@basicInformationLink" aria-describedby="basic-info-status">
                @StaticTextResource.BasicInformation_SectionTitle
            </a>
        </div>

        <div class="govuk-task-list__status" id="basic-info-status">
            <strong class="govuk-tag govuk-tag--@GetStepStatusTag(Model.BasicInformationStepStatus)">@GetStepStatusDescription(Model.BasicInformationStepStatus)</strong>
        </div>
    </li>

    <li class="govuk-task-list__item govuk-task-list__item--with-link">
        <div class="govuk-task-list__name-and-hint">
            <a class="govuk-link govuk-link--no-visited-state" href="@connectedEntityLink" aria-describedby="connected-persons-hint connected-persons-status">
                @StaticTextResource.ConnectedPersons_SectionTitle
            </a>

            <div id="connected-persons-hint" class="govuk-task-list__hint">
                @NoOfConnectedPersonText()
            </div>
        </div>
        <div class="govuk-task-list__status" id="connected-persons-status">
            <strong class="govuk-tag govuk-tag--@GetStepStatusTag(Model.ConnectedPersonStepStatus)">@GetStepStatusDescription(Model.ConnectedPersonStepStatus)</strong>
        </div>
    </li>

    @{
        var formSections = Model.FormSections.Where(section => section.Type != CDP.Forms.WebApiClient.FormSectionType.Declaration).ToList();
        var declarationSection = Model.FormSections.Where(section => section.Type == CDP.Forms.WebApiClient.FormSectionType.Declaration).First();
    }

    @foreach (var section in formSections)
    {
        var exclusionsSection = section.Type == CDP.Forms.WebApiClient.FormSectionType.Exclusions;
        var redirectLink = $"/organisation/{Model.Id}/forms/{FormsEngine.OrganisationSupplierInfoFormId}/sections/{section.SectionId}";

        if (exclusionsSection && (section.AnswerSetCount == 0 || section.AnswerSetWithFurtherQuestionExemptedExists) && !isViewer)
        {
            redirectLink += "/add-exclusion-declaration";
        }

        <li class="govuk-task-list__item govuk-task-list__item--with-link">
            <div class="govuk-task-list__name-and-hint">
                <a class="govuk-link govuk-link--no-visited-state" href="@redirectLink" aria-describedby="form-section-@(section.SectionId)-hint form-section-@(section.SectionId)-status">
                    @(section.SectionName)
                </a>

                <div id="form-section-@(section.SectionId)-hint" class="govuk-task-list__hint">
                    @if (section.AnswerSetCount > 0)
                    {
                        if (section.AnswerSetWithFurtherQuestionExemptedExists)
                        {
                            @StaticTextResource.Supplier_SupplierInformationSummary_FormsFurtherQuestionExempt
                        }
                        else
                        {
                            @(string.Format(section.AnswerSetCount > 1 ? StaticTextResource.Supplier_SupplierInformationSummary_FormRecordCount_Plural : StaticTextResource.Supplier_SupplierInformationSummary_FormRecordCount_Singular, section.AnswerSetCount))
                        }
                    }
                </div>
            </div>
            <div class="govuk-task-list__status" id="form-section-@(section.SectionId)-status">
                <strong class="govuk-tag govuk-tag--@(section.AnswerSetCount > 0 ? "green" : "grey")">
                    @(section.AnswerSetCount > 0 ? StaticTextResource.SupplierInformationStatus_StepStatus_Completed : StaticTextResource.SupplierInformationStatus_StepStatus_NotStarted)
                </strong>
            </div>
        </li>
    }
</ul>

<h2 class="govuk-heading-m">@StaticTextResource.Supplier_SupplierInformationShare_Heading</h2>
<p class="govuk-body">@StaticTextResource.Supplier_SupplierInformationShare_Hint</p>

<div class="govuk-task-list">
    <div class="govuk-task-list__item govuk-task-list__item--with-link">
        <div class="govuk-task-list__name-and-hint">
            <a class="govuk-link govuk-link--no-visited-state" href="/organisation/@Model.Id/forms/@FormsEngine.OrganisationSupplierInfoFormId/sections/@declarationSection.SectionId/share-codes-list-view" aria-describedby="form-section-@(declarationSection.SectionId)-hint form-section-@(declarationSection.SectionId)-status">
                @(declarationSection.SectionName)
            </a>
        </div>
    </div>
</div>

<div class="govuk-!-margin-top-8">
    <a class="govuk-link" href="/organisation/@Model.Id">@StaticTextResource.Global_BackToOrganisationDetails</a>
</div>