@using CO.CDP.RegisterOfCommercialTools.App.Models
@using CO.CDP.RegisterOfCommercialTools.WebApiClient.Models
@model HierarchicalCodeSelectionViewModel<NutsCodeDto>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="govuk-error-message" role="alert">
        <span class="govuk-visually-hidden">Error: </span>@Model.ErrorMessage
    </div>
}
else if (string.IsNullOrEmpty(Model.SearchQuery))
{
    <p class="govuk-body-s">Enter a search term to find locations</p>
}
else if (Model.SearchQuery.Length < 2)
{
    <p class="govuk-body-s govuk-!-margin-top-2">Please enter at least 2 characters to search.</p>
}
else if (!Model.SearchResults.Any())
{
    <p class="govuk-body-s govuk-!-margin-top-2">No locations found. Please check your spelling.</p>
}
else
{
    <div class="code-search-dropdown">
        @foreach (var (item, _) in Model.SearchResults.Take(10).Select((x, i) => (x, i)))
        {
            var isSelected = Model.IsSelected(item.Code);
            var isCountryLevel = item.ParentCode == null;

            <div class="code-search-item @(isSelected ? "code-search-item--selected" : "")"
                 data-code="@item.Code"
                 data-action="toggle-selection"
                 role="button"
                 tabindex="0">
                <div class="code-search-text">
                    <span class="govuk-body-s govuk-!-font-weight-bold result-title">@item.DescriptionEn</span>
                    <span class="govuk-body-s result-description">
                        @if (!isCountryLevel && !string.IsNullOrEmpty(item.GetParentDescription()))
                        {
                            @item.GetParentDescription()
                        }
                        else
                        {
                            <text>&nbsp;</text>
                        }
                    </span>
                </div>
            </div>
        }
    </div>

}