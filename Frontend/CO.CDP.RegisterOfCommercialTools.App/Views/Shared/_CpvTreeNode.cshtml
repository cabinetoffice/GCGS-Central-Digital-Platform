@using CO.CDP.RegisterOfCommercialTools.App.Models
@model CpvTreeNodeViewModel

@if (Model.HasChildren)
{
    <details class="cpv-details cpv-details--level-@Model.Level" data-cpv-code="@Model.Item.Code">
        <summary class="cpv-details__summary">
            <input class="govuk-checkboxes__input govuk-checkboxes__input--small cpv-details__checkbox"
                   type="checkbox"
                   id="@Model.CheckboxId"
                   data-code="@Model.Item.Code"
                   data-action="toggle-selection"
                   @(Model.IsSelected ? "checked" : "")>
            <span class="cpv-details__content">
                <span class="govuk-body-s"><strong>@Model.Item.Code</strong> @Model.Item.DescriptionEn</span>
            </span>
        </summary>

        <div class="cpv-details__children" data-children-container="@Model.Item.Code">
            @if (Model.Item.Children.Any())
            {
                @foreach (var child in Model.Item.Children)
                {
                    @await Html.PartialAsync("_CpvTreeNode", new CpvTreeNodeViewModel { Item = child, Level = Model.Level + 1, SelectedCodes = Model.SelectedCodes })
                }
            }
        </div>
    </details>
}
else
{
    <div class="cpv-item cpv-item--level-@Model.Level">
        <div class="cpv-item__content">
            <input class="govuk-checkboxes__input govuk-checkboxes__input--small cpv-item__checkbox"
                   type="checkbox"
                   id="@Model.CheckboxId"
                   data-code="@Model.Item.Code"
                   data-action="toggle-selection"
                   @(Model.IsSelected ? "checked" : "")>
            <span class="cpv-item__text">
                <span class="govuk-body-s"><strong>@Model.Item.Code</strong> @Model.Item.DescriptionEn</span>
            </span>
        </div>
    </div>
}